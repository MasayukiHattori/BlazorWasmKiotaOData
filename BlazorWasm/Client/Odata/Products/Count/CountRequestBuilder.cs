// <auto-generated/>
#pragma warning disable CS0618
using BlazorWasm.Client.Models;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace BlazorWasm.Client.Odata.Products.Count
{
    /// <summary>
    /// Builds and executes requests for operations under \odata\Products\$count
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class CountRequestBuilder : BaseRequestBuilder
    {
        /// <summary>
        /// Instantiates a new <see cref="global::BlazorWasm.Client.Odata.Products.Count.CountRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public CountRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/odata/Products/$count{?api%2Dversion*,count*,expand*,filter*,orderby*,select*,skip*,top*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::BlazorWasm.Client.Odata.Products.Count.CountRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public CountRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/odata/Products/$count{?api%2Dversion*,count*,expand*,filter*,orderby*,select*,skip*,top*}", rawUrl)
        {
        }
        /// <summary>
        /// 製品一覧を取得します。
        /// </summary>
        /// <returns>A <see cref="global::BlazorWasm.Client.Models.ProductIEnumerableODataValue"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::BlazorWasm.Client.Models.ProductIEnumerableODataValue?> GetAsync(Action<RequestConfiguration<global::BlazorWasm.Client.Odata.Products.Count.CountRequestBuilder.CountRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::BlazorWasm.Client.Models.ProductIEnumerableODataValue> GetAsync(Action<RequestConfiguration<global::BlazorWasm.Client.Odata.Products.Count.CountRequestBuilder.CountRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            return await RequestAdapter.SendAsync<global::BlazorWasm.Client.Models.ProductIEnumerableODataValue>(requestInfo, global::BlazorWasm.Client.Models.ProductIEnumerableODataValue.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// 製品一覧を取得します。
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::BlazorWasm.Client.Odata.Products.Count.CountRequestBuilder.CountRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::BlazorWasm.Client.Odata.Products.Count.CountRequestBuilder.CountRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::BlazorWasm.Client.Odata.Products.Count.CountRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::BlazorWasm.Client.Odata.Products.Count.CountRequestBuilder WithUrl(string rawUrl)
        {
            return new global::BlazorWasm.Client.Odata.Products.Count.CountRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// 製品一覧を取得します。
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CountRequestBuilderGetQueryParameters 
        {
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("api%2Dversion")]
            public string? ApiVersion { get; set; }
#nullable restore
#else
            [QueryParameter("api%2Dversion")]
            public string ApiVersion { get; set; }
#endif
            [QueryParameter("count")]
            public bool? Count { get; set; }
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("expand")]
            public string? Expand { get; set; }
#nullable restore
#else
            [QueryParameter("expand")]
            public string Expand { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("filter")]
            public string? Filter { get; set; }
#nullable restore
#else
            [QueryParameter("filter")]
            public string Filter { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("orderby")]
            public string? Orderby { get; set; }
#nullable restore
#else
            [QueryParameter("orderby")]
            public string Orderby { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("select")]
            public string? Select { get; set; }
#nullable restore
#else
            [QueryParameter("select")]
            public string Select { get; set; }
#endif
            [QueryParameter("skip")]
            public int? Skip { get; set; }
            [QueryParameter("top")]
            public int? Top { get; set; }
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class CountRequestBuilderGetRequestConfiguration : RequestConfiguration<global::BlazorWasm.Client.Odata.Products.Count.CountRequestBuilder.CountRequestBuilderGetQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
